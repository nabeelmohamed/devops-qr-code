pipeline {
    agent any
    tools {
        nodejs 'nodejs'
    }
    environment {
        DOCKER_HUB_CREDENTIALS = credentials('DOCKER_HUB')
        AWS_DEFAULT_REGION = 'us-east-1'
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git credentialsId: 'GITHUB', url: 'https://github.com/your-repo-url.git'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                dir('front-end-nextjs') {
                    withSonarQubeEnv('sonar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectKey=frontend \
                        -Dsonar.projectName=frontend \
                        -Dsonar.sources=. '''
                    }
                }
            }
        }
        stage('Quality Check') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false
                }
            }
        }
        stage('Trivy File Scan') {
            steps {
                dir('front-end-nextjs') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        stage('Docker Image Build and Push') {
            steps {
                script {
                    dir('front-end-nextjs') {
                        sh 'docker build -t your-docker-hub-username/frontend:${BUILD_NUMBER} .'
                        sh 'echo $DOCKER_HUB_CREDENTIALS_PSW | docker login -u $DOCKER_HUB_CREDENTIALS_USR --password-stdin'
                        sh 'docker push your-docker-hub-username/frontend:${BUILD_NUMBER}'
                    }
                }
            }
        }
        stage('Trivy Image Scan') {
            steps {
                sh 'trivy image your-docker-hub-username/frontend:${BUILD_NUMBER} > trivyimage.txt'
            }
        }
        stage('Update Deployment File') {
            steps {
                dir('k8s') {
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "your-email@example.com"
                            git config user.name "your-github-username"
                            sed -i "s|image: your-docker-hub-username/frontend:.*|image: your-docker-hub-username/frontend:${BUILD_NUMBER}|" frontend-deployment.yaml
                            git add frontend-deployment.yaml
                            git commit -m "Update frontend image to version ${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/your-github-username/your-repo-url.git HEAD:main
                        '''
                    }
                }
            }
        }
    }
}
